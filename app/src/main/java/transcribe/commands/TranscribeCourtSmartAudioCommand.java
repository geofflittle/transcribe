/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package transcribe.commands;

import java.nio.file.Path;
import java.time.ZoneId;
import java.util.List;

import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.Option;

import com.google.inject.Inject;

import lombok.NonNull;
import lombok.RequiredArgsConstructor;
import lombok.Value;
import lombok.extern.slf4j.Slf4j;
import transcribe.Command;
import transcribe.services.CourtSmartZipTranscriber;

@Slf4j
@Value
@RequiredArgsConstructor(onConstructor = @__(@Inject))
public class TranscribeCourtSmartAudioCommand implements Command {

    private static final String ZIP_SHORT = "z";
    private static final String ZONE_SHORT = "t";
    private static final String OUTPUT_SHORT = "o";

    @NonNull
    private final Option commandOption = Option.builder("t")
            .argName("transcribe")
            .desc("Transcribe a CourtSmart audio zip")
            .optionalArg(true)
            .build();

    @NonNull
    private final List<Option> options = List.of(
            Option.builder(ZIP_SHORT)
                    .argName("courtSmartZipPath")
                    .desc("CourtSmart zip file path")
                    .optionalArg(false)
                    .hasArg()
                    .build(),
            Option.builder(ZONE_SHORT)
                    .argName("zoneId")
                    .desc("The time zone of the audio in the CourtSmart zip")
                    .optionalArg(false)
                    .hasArg()
                    .build(),
            Option.builder(OUTPUT_SHORT)
                    .argName("outputDir")
                    .desc("Directory for output files")
                    .optionalArg(false)
                    .hasArg()
                    .build());

    @NonNull
    private final CourtSmartZipTranscriber transcriber;

    public void run(CommandLine cmd) {
        var courtSmartZipFileStr = cmd.getOptionValue(ZIP_SHORT);
        var zoneIdStr = cmd.getOptionValue(ZONE_SHORT);
        var outputDirStr = cmd.getOptionValue(OUTPUT_SHORT);

        log.info("Will process CourtSmart zip {} with zone id {} and output dir {}", courtSmartZipFileStr, zoneIdStr,
                outputDirStr);
        transcriber.transcribe(Path.of(courtSmartZipFileStr), ZoneId.of(zoneIdStr), Path.of(outputDirStr));
        log.info("Did process CourtSmart zip {} with zone id {} and output dir {}", courtSmartZipFileStr, zoneIdStr,
                outputDirStr);
    }
}
